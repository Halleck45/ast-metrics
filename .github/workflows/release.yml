name: release
on:
  push:
    tags: ["*"]

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux
          - os: ubuntu-latest      # x86_64
            goos: linux
            goarch: amd64
          - os: ubuntu-24.04-arm   # arm64 (public repos)
            goos: linux
            goarch: arm64
          # macOS
          - os: macos-13           # Intel
            goos: darwin
            goarch: amd64
          - os: macos-14           # Apple Silicon
            goos: darwin
            goarch: arm64
          # Windows
          - os: windows-latest     # x86_64
            goos: windows
            goarch: amd64
          - os: windows-11-arm     # arm64 (public repos)
            goos: windows
            goarch: arm64

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-go@v5
        with: { go-version: stable }

      # Toolchains pour CGO
      - name: Toolchain (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get update && sudo apt-get install -y build-essential pkg-config
      - name: Toolchain (Windows)
        if: startsWith(matrix.os, 'windows')
        uses: ilammy/msvc-dev-cmd@v1

      - name: Tests
        run: go test ./...
        env: { CGO_ENABLED: 1 }

      - name: Génère la config ciblée (hors repo)
        shell: bash
        run: |
          cat > "$RUNNER_TEMP/goreleaser.yml" <<EOF
          version: 2
          before:
            hooks:
              - go mod tidy
              - go generate ./...
          builds:
            - id: app
              env: ["CGO_ENABLED=1"]
              goos: [${{ matrix.goos }}]
              goarch: [${{ matrix.goarch }}]
              ldflags: ["-s", "-w"]
              mod_timestamp: "{{ .CommitTimestamp }}"
          archives:
            - formats: [tar.gz]
              format_overrides:
                - goos: windows
                  formats: [zip]
              name_template: "{{ .ProjectName }}_{{ .Version }}_{{ title .Os }}_{{ if eq .Arch \"amd64\" }}x86_64{{ else }}{{ .Arch }}{{ end }}"
          changelog:
            sort: asc
            filters:
              exclude:
                - "^docs:"
                - "^test:"
          checksum:
            disable: true
            name_template: "{{ .ProjectName }}_checksums.txt"
            split: true
          
          EOF

      - name: "Debug content of goreleaser file"
        run: cat "$RUNNER_TEMP/goreleaser.yml"

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean --config "${{ runner.temp }}/goreleaser.yml"
        env:
          CGO_ENABLED: 1
          GITHUB_TOKEN: ${{ secrets.PUSH_TOKEN }}
