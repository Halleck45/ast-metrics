name: Go

on: [push]

jobs:
  # build:

  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       go-version: [ '1.21.x' ]

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Setup Go ${{ matrix.go-version }}
  #       uses: actions/setup-go@v4
  #       with:
  #         go-version: ${{ matrix.go-version }}
  #         cache-dependency-path: subdir/go.sum

  #     - name: Install system dependencies
  #       run: |
  #         sudo apt install -y make cmake
  #         make install-build

  #     - name: Install Go dependencies
  #       run: go get .

  #     - name: Test with the Go CLI
  #       run: |
  #         export PKG_CONFIG_PATH=$(pwd)/build/libgit/libgit2-1.5.0/build
  #         export LD_LIBRARY_PATH=$(pwd)/build/libgit/libgit2-1.5.0/build
  #         go test

  goreleaser:
    #runs-on: macos-latest
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
          cache-dependency-path: subdir/go.sum

      - name: Install system dependencies
        run: |
          (which brew && brew install make cmake || true)
          (which apt && sudo apt install make cmake || true)
          make install-build

      - name: Install Go dependencies
        run: go get .

      # Zig (for C dependencies, like libgit)
      - uses: goto-bus-stop/setup-zig@v2.0.1
          
      - name: Set output
        id: macos_sdk
        run: |
          if [[ "$OSTYPE" == "darwin"* ]]; then
            echo "path=$(xcrun --show-sdk-path)" >> $GITHUB_ENV
          fi
      
      #- name: Test with the Go CLI
      #  run: |
      #    export PKG_CONFIG_PATH=$(pwd)/build/libgit/libgit2-1.5.0/build
      #    export LD_LIBRARY_PATH=$(pwd)/build/libgit/libgit2-1.5.0/build
      #    go test

      - name: "Set environmental variables"
        run: |
          echo "PKG_CONFIG_PATH=$(pwd)/build/libgit/libgit2-1.5.0/build" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$(pwd)/build/libgit/libgit2-1.5.0/build" >> $GITHUB_ENV

      # Build artifacts
      - uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --snapshot --skip=publish
        env:
          GITHUB_TOKEN: ${{ secrets.PUSH_TOKEN }}
          SDK_PATH: ${{ steps.macos_sdk.outputs.path }}
          LIBGIT2_SYS_USE_PKG_CONFIG: 1