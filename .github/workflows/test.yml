name: CI
permissions:
  contents: read

on: [push]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-14, windows-latest]
        go-version: [ '1.21.x' ]

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4
        with:
          clean: true

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache-dependency-path: subdir/go.sum

      - name: Display Go version
        run: go version

      - name: Install dependencies
        run: go mod tidy

      - name: Test with the Go CLI (coverage only on ubuntu)
        run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...
        if: matrix.os == 'ubuntu-latest'

      - name: Test with the Go CLI (no coverage on other OS)
        run: go test -race ./...
        if: matrix.os != 'ubuntu-latest'

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Halleck45/ast-metrics

  lighthouse:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.21.x' ]
    steps:
      - uses: actions/checkout@v4
        with:
          clean: true

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache-dependency-path: subdir/go.sum

      - name: Test the cli directly, generating HTML report
        run: |
          go run ./cmd/ast-metrics/ analyze --non-interactive --report-html=reporthtml internal
          ls reporthtml || (echo "No report generated" && exit 1) && (echo "Report generated" && exit 0)

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v12
        with:
          configPath: "./lighthouserc.json"
          temporaryPublicStorage: true