<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/NodeType.proto

namespace NodeType;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Represents a statement node.
 *
 * Generated from protobuf message <code>NodeType.Stmt</code>
 */
class Stmt extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.NodeType.StmtLocationInFile attributes = 1;</code>
     */
    protected $attributes = null;
    protected $stmt;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \NodeType\StmtLocationInFile $attributes
     *     @type \NodeType\StmtClass $stmtClass
     *           Append here all the possible statements
     *     @type \NodeType\StmtFunction $stmtFunction
     *     @type \NodeType\StmtInterface $stmtInterface
     *     @type \NodeType\StmtTrait $stmtTrait
     *     @type \NodeType\StmtUse $stmtUse
     *     @type \NodeType\StmtNamespace $stmtNamespace
     *     @type \NodeType\StmtDecisionIf $stmtDecisionIf
     *     @type \NodeType\StmtDecisionElseIf $stmtDecisionElseIf
     *     @type \NodeType\StmtDecisionElse $stmtDecisionElse
     *     @type \NodeType\StmtDecisionCase $stmtDecisionCase
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\NodeType::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.NodeType.StmtLocationInFile attributes = 1;</code>
     * @return \NodeType\StmtLocationInFile|null
     */
    public function getAttributes()
    {
        return $this->attributes;
    }

    public function hasAttributes()
    {
        return isset($this->attributes);
    }

    public function clearAttributes()
    {
        unset($this->attributes);
    }

    /**
     * Generated from protobuf field <code>.NodeType.StmtLocationInFile attributes = 1;</code>
     * @param \NodeType\StmtLocationInFile $var
     * @return $this
     */
    public function setAttributes($var)
    {
        GPBUtil::checkMessage($var, \NodeType\StmtLocationInFile::class);
        $this->attributes = $var;

        return $this;
    }

    /**
     * Append here all the possible statements
     *
     * Generated from protobuf field <code>.NodeType.StmtClass stmtClass = 2;</code>
     * @return \NodeType\StmtClass|null
     */
    public function getStmtClass()
    {
        return $this->readOneof(2);
    }

    public function hasStmtClass()
    {
        return $this->hasOneof(2);
    }

    /**
     * Append here all the possible statements
     *
     * Generated from protobuf field <code>.NodeType.StmtClass stmtClass = 2;</code>
     * @param \NodeType\StmtClass $var
     * @return $this
     */
    public function setStmtClass($var)
    {
        GPBUtil::checkMessage($var, \NodeType\StmtClass::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.NodeType.StmtFunction stmtFunction = 3;</code>
     * @return \NodeType\StmtFunction|null
     */
    public function getStmtFunction()
    {
        return $this->readOneof(3);
    }

    public function hasStmtFunction()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.NodeType.StmtFunction stmtFunction = 3;</code>
     * @param \NodeType\StmtFunction $var
     * @return $this
     */
    public function setStmtFunction($var)
    {
        GPBUtil::checkMessage($var, \NodeType\StmtFunction::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.NodeType.StmtInterface stmtInterface = 4;</code>
     * @return \NodeType\StmtInterface|null
     */
    public function getStmtInterface()
    {
        return $this->readOneof(4);
    }

    public function hasStmtInterface()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.NodeType.StmtInterface stmtInterface = 4;</code>
     * @param \NodeType\StmtInterface $var
     * @return $this
     */
    public function setStmtInterface($var)
    {
        GPBUtil::checkMessage($var, \NodeType\StmtInterface::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.NodeType.StmtTrait stmtTrait = 5;</code>
     * @return \NodeType\StmtTrait|null
     */
    public function getStmtTrait()
    {
        return $this->readOneof(5);
    }

    public function hasStmtTrait()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>.NodeType.StmtTrait stmtTrait = 5;</code>
     * @param \NodeType\StmtTrait $var
     * @return $this
     */
    public function setStmtTrait($var)
    {
        GPBUtil::checkMessage($var, \NodeType\StmtTrait::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.NodeType.StmtUse stmtUse = 6;</code>
     * @return \NodeType\StmtUse|null
     */
    public function getStmtUse()
    {
        return $this->readOneof(6);
    }

    public function hasStmtUse()
    {
        return $this->hasOneof(6);
    }

    /**
     * Generated from protobuf field <code>.NodeType.StmtUse stmtUse = 6;</code>
     * @param \NodeType\StmtUse $var
     * @return $this
     */
    public function setStmtUse($var)
    {
        GPBUtil::checkMessage($var, \NodeType\StmtUse::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.NodeType.StmtNamespace stmtNamespace = 7;</code>
     * @return \NodeType\StmtNamespace|null
     */
    public function getStmtNamespace()
    {
        return $this->readOneof(7);
    }

    public function hasStmtNamespace()
    {
        return $this->hasOneof(7);
    }

    /**
     * Generated from protobuf field <code>.NodeType.StmtNamespace stmtNamespace = 7;</code>
     * @param \NodeType\StmtNamespace $var
     * @return $this
     */
    public function setStmtNamespace($var)
    {
        GPBUtil::checkMessage($var, \NodeType\StmtNamespace::class);
        $this->writeOneof(7, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.NodeType.StmtDecisionIf stmtDecisionIf = 8;</code>
     * @return \NodeType\StmtDecisionIf|null
     */
    public function getStmtDecisionIf()
    {
        return $this->readOneof(8);
    }

    public function hasStmtDecisionIf()
    {
        return $this->hasOneof(8);
    }

    /**
     * Generated from protobuf field <code>.NodeType.StmtDecisionIf stmtDecisionIf = 8;</code>
     * @param \NodeType\StmtDecisionIf $var
     * @return $this
     */
    public function setStmtDecisionIf($var)
    {
        GPBUtil::checkMessage($var, \NodeType\StmtDecisionIf::class);
        $this->writeOneof(8, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.NodeType.StmtDecisionElseIf stmtDecisionElseIf = 9;</code>
     * @return \NodeType\StmtDecisionElseIf|null
     */
    public function getStmtDecisionElseIf()
    {
        return $this->readOneof(9);
    }

    public function hasStmtDecisionElseIf()
    {
        return $this->hasOneof(9);
    }

    /**
     * Generated from protobuf field <code>.NodeType.StmtDecisionElseIf stmtDecisionElseIf = 9;</code>
     * @param \NodeType\StmtDecisionElseIf $var
     * @return $this
     */
    public function setStmtDecisionElseIf($var)
    {
        GPBUtil::checkMessage($var, \NodeType\StmtDecisionElseIf::class);
        $this->writeOneof(9, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.NodeType.StmtDecisionElse stmtDecisionElse = 10;</code>
     * @return \NodeType\StmtDecisionElse|null
     */
    public function getStmtDecisionElse()
    {
        return $this->readOneof(10);
    }

    public function hasStmtDecisionElse()
    {
        return $this->hasOneof(10);
    }

    /**
     * Generated from protobuf field <code>.NodeType.StmtDecisionElse stmtDecisionElse = 10;</code>
     * @param \NodeType\StmtDecisionElse $var
     * @return $this
     */
    public function setStmtDecisionElse($var)
    {
        GPBUtil::checkMessage($var, \NodeType\StmtDecisionElse::class);
        $this->writeOneof(10, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.NodeType.StmtDecisionCase stmtDecisionCase = 11;</code>
     * @return \NodeType\StmtDecisionCase|null
     */
    public function getStmtDecisionCase()
    {
        return $this->readOneof(11);
    }

    public function hasStmtDecisionCase()
    {
        return $this->hasOneof(11);
    }

    /**
     * Generated from protobuf field <code>.NodeType.StmtDecisionCase stmtDecisionCase = 11;</code>
     * @param \NodeType\StmtDecisionCase $var
     * @return $this
     */
    public function setStmtDecisionCase($var)
    {
        GPBUtil::checkMessage($var, \NodeType\StmtDecisionCase::class);
        $this->writeOneof(11, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getStmt()
    {
        return $this->whichOneof("stmt");
    }

}

