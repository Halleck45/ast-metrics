<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/NodeType.proto

namespace NodeType;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * ------------------------------------
 * -- Node Types and statements
 * ------------------------------------
 * represents an identifier (name)
 *
 * Generated from protobuf message <code>NodeType.Name</code>
 */
class Name extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string short = 1;</code>
     */
    protected $short = '';
    /**
     * fully qualified name (with namespace)
     *
     * Generated from protobuf field <code>string qualified = 2;</code>
     */
    protected $qualified = '';
    /**
     * internal description of statement (e.g. for function: return type + name + parameters)
     *
     * Generated from protobuf field <code>string describer = 3;</code>
     */
    protected $describer = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $short
     *     @type string $qualified
     *           fully qualified name (with namespace)
     *     @type string $describer
     *           internal description of statement (e.g. for function: return type + name + parameters)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\NodeType::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string short = 1;</code>
     * @return string
     */
    public function getShort()
    {
        return $this->short;
    }

    /**
     * Generated from protobuf field <code>string short = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setShort($var)
    {
        GPBUtil::checkString($var, True);
        $this->short = $var;

        return $this;
    }

    /**
     * fully qualified name (with namespace)
     *
     * Generated from protobuf field <code>string qualified = 2;</code>
     * @return string
     */
    public function getQualified()
    {
        return $this->qualified;
    }

    /**
     * fully qualified name (with namespace)
     *
     * Generated from protobuf field <code>string qualified = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setQualified($var)
    {
        GPBUtil::checkString($var, True);
        $this->qualified = $var;

        return $this;
    }

    /**
     * internal description of statement (e.g. for function: return type + name + parameters)
     *
     * Generated from protobuf field <code>string describer = 3;</code>
     * @return string
     */
    public function getDescriber()
    {
        return $this->describer;
    }

    /**
     * internal description of statement (e.g. for function: return type + name + parameters)
     *
     * Generated from protobuf field <code>string describer = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDescriber($var)
    {
        GPBUtil::checkString($var, True);
        $this->describer = $var;

        return $this;
    }

}

