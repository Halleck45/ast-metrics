// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: definitions/NodeType.proto

package NodeType

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// represents an identifier (name)
type Name struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Short     string `protobuf:"bytes,1,opt,name=short,proto3" json:"short,omitempty"`
	Qualified string `protobuf:"bytes,2,opt,name=qualified,proto3" json:"qualified,omitempty"` // fully qualified name (with namespace)
	Describer string `protobuf:"bytes,3,opt,name=describer,proto3" json:"describer,omitempty"` // internal description of statement (e.g. for function: return type + name + parameters)
}

func (x *Name) Reset() {
	*x = Name{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definitions_NodeType_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Name) ProtoMessage() {}

func (x *Name) ProtoReflect() protoreflect.Message {
	mi := &file_definitions_NodeType_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Name.ProtoReflect.Descriptor instead.
func (*Name) Descriptor() ([]byte, []int) {
	return file_definitions_NodeType_proto_rawDescGZIP(), []int{0}
}

func (x *Name) GetShort() string {
	if x != nil {
		return x.Short
	}
	return ""
}

func (x *Name) GetQualified() string {
	if x != nil {
		return x.Qualified
	}
	return ""
}

func (x *Name) GetDescriber() string {
	if x != nil {
		return x.Describer
	}
	return ""
}

// Represents a list of statements.
type Stmts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stmts []*Stmt `protobuf:"bytes,1,rep,name=stmts,proto3" json:"stmts,omitempty"`
}

func (x *Stmts) Reset() {
	*x = Stmts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definitions_NodeType_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stmts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stmts) ProtoMessage() {}

func (x *Stmts) ProtoReflect() protoreflect.Message {
	mi := &file_definitions_NodeType_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stmts.ProtoReflect.Descriptor instead.
func (*Stmts) Descriptor() ([]byte, []int) {
	return file_definitions_NodeType_proto_rawDescGZIP(), []int{1}
}

func (x *Stmts) GetStmts() []*Stmt {
	if x != nil {
		return x.Stmts
	}
	return nil
}

// Represents a statement node.
type Stmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *StmtLocationInFile `protobuf:"bytes,1,opt,name=attributes,proto3" json:"attributes,omitempty"`
	// Types that are assignable to Stmt:
	//
	//	*Stmt_StmtClass
	//	*Stmt_StmtFunction
	//	*Stmt_StmtInterface
	//	*Stmt_StmtTrait
	//	*Stmt_StmtUse
	//	*Stmt_StmtNamespace
	Stmt isStmt_Stmt `protobuf_oneof:"stmt"`
}

func (x *Stmt) Reset() {
	*x = Stmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definitions_NodeType_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stmt) ProtoMessage() {}

func (x *Stmt) ProtoReflect() protoreflect.Message {
	mi := &file_definitions_NodeType_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stmt.ProtoReflect.Descriptor instead.
func (*Stmt) Descriptor() ([]byte, []int) {
	return file_definitions_NodeType_proto_rawDescGZIP(), []int{2}
}

func (x *Stmt) GetAttributes() *StmtLocationInFile {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (m *Stmt) GetStmt() isStmt_Stmt {
	if m != nil {
		return m.Stmt
	}
	return nil
}

func (x *Stmt) GetStmtClass() *StmtClass {
	if x, ok := x.GetStmt().(*Stmt_StmtClass); ok {
		return x.StmtClass
	}
	return nil
}

func (x *Stmt) GetStmtFunction() *StmtFunction {
	if x, ok := x.GetStmt().(*Stmt_StmtFunction); ok {
		return x.StmtFunction
	}
	return nil
}

func (x *Stmt) GetStmtInterface() *StmtInterface {
	if x, ok := x.GetStmt().(*Stmt_StmtInterface); ok {
		return x.StmtInterface
	}
	return nil
}

func (x *Stmt) GetStmtTrait() *StmtTrait {
	if x, ok := x.GetStmt().(*Stmt_StmtTrait); ok {
		return x.StmtTrait
	}
	return nil
}

func (x *Stmt) GetStmtUse() *StmtUse {
	if x, ok := x.GetStmt().(*Stmt_StmtUse); ok {
		return x.StmtUse
	}
	return nil
}

func (x *Stmt) GetStmtNamespace() *StmtNamespace {
	if x, ok := x.GetStmt().(*Stmt_StmtNamespace); ok {
		return x.StmtNamespace
	}
	return nil
}

type isStmt_Stmt interface {
	isStmt_Stmt()
}

type Stmt_StmtClass struct {
	// Append here all the possible statements
	StmtClass *StmtClass `protobuf:"bytes,2,opt,name=stmtClass,proto3,oneof"`
}

type Stmt_StmtFunction struct {
	StmtFunction *StmtFunction `protobuf:"bytes,3,opt,name=stmtFunction,proto3,oneof"`
}

type Stmt_StmtInterface struct {
	StmtInterface *StmtInterface `protobuf:"bytes,4,opt,name=stmtInterface,proto3,oneof"`
}

type Stmt_StmtTrait struct {
	StmtTrait *StmtTrait `protobuf:"bytes,5,opt,name=stmtTrait,proto3,oneof"`
}

type Stmt_StmtUse struct {
	StmtUse *StmtUse `protobuf:"bytes,6,opt,name=stmtUse,proto3,oneof"`
}

type Stmt_StmtNamespace struct {
	StmtNamespace *StmtNamespace `protobuf:"bytes,7,opt,name=stmtNamespace,proto3,oneof"`
}

func (*Stmt_StmtClass) isStmt_Stmt() {}

func (*Stmt_StmtFunction) isStmt_Stmt() {}

func (*Stmt_StmtInterface) isStmt_Stmt() {}

func (*Stmt_StmtTrait) isStmt_Stmt() {}

func (*Stmt_StmtUse) isStmt_Stmt() {}

func (*Stmt_StmtNamespace) isStmt_Stmt() {}

// Describe the location of statement in file.
type StmtLocationInFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartLine    int32 `protobuf:"varint,1,opt,name=startLine,proto3" json:"startLine,omitempty"`
	StartFilePos int32 `protobuf:"varint,2,opt,name=startFilePos,proto3" json:"startFilePos,omitempty"`
	EndLine      int32 `protobuf:"varint,3,opt,name=endLine,proto3" json:"endLine,omitempty"`
	EndFilePos   int32 `protobuf:"varint,4,opt,name=endFilePos,proto3" json:"endFilePos,omitempty"`
}

func (x *StmtLocationInFile) Reset() {
	*x = StmtLocationInFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definitions_NodeType_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StmtLocationInFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StmtLocationInFile) ProtoMessage() {}

func (x *StmtLocationInFile) ProtoReflect() protoreflect.Message {
	mi := &file_definitions_NodeType_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StmtLocationInFile.ProtoReflect.Descriptor instead.
func (*StmtLocationInFile) Descriptor() ([]byte, []int) {
	return file_definitions_NodeType_proto_rawDescGZIP(), []int{3}
}

func (x *StmtLocationInFile) GetStartLine() int32 {
	if x != nil {
		return x.StartLine
	}
	return 0
}

func (x *StmtLocationInFile) GetStartFilePos() int32 {
	if x != nil {
		return x.StartFilePos
	}
	return 0
}

func (x *StmtLocationInFile) GetEndLine() int32 {
	if x != nil {
		return x.EndLine
	}
	return 0
}

func (x *StmtLocationInFile) GetEndFilePos() int32 {
	if x != nil {
		return x.EndFilePos
	}
	return 0
}

// Represents a namespace node.
type StmtNamespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *Name               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Stmts    *Stmts              `protobuf:"bytes,2,opt,name=stmts,proto3" json:"stmts,omitempty"`
	Location *StmtLocationInFile `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *StmtNamespace) Reset() {
	*x = StmtNamespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definitions_NodeType_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StmtNamespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StmtNamespace) ProtoMessage() {}

func (x *StmtNamespace) ProtoReflect() protoreflect.Message {
	mi := &file_definitions_NodeType_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StmtNamespace.ProtoReflect.Descriptor instead.
func (*StmtNamespace) Descriptor() ([]byte, []int) {
	return file_definitions_NodeType_proto_rawDescGZIP(), []int{4}
}

func (x *StmtNamespace) GetName() *Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *StmtNamespace) GetStmts() *Stmts {
	if x != nil {
		return x.Stmts
	}
	return nil
}

func (x *StmtNamespace) GetLocation() *StmtLocationInFile {
	if x != nil {
		return x.Location
	}
	return nil
}

// Represents a Use (or Import) node.
type StmtUse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *Name               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Stmts    *Stmts              `protobuf:"bytes,2,opt,name=stmts,proto3" json:"stmts,omitempty"`
	Location *StmtLocationInFile `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *StmtUse) Reset() {
	*x = StmtUse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definitions_NodeType_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StmtUse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StmtUse) ProtoMessage() {}

func (x *StmtUse) ProtoReflect() protoreflect.Message {
	mi := &file_definitions_NodeType_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StmtUse.ProtoReflect.Descriptor instead.
func (*StmtUse) Descriptor() ([]byte, []int) {
	return file_definitions_NodeType_proto_rawDescGZIP(), []int{5}
}

func (x *StmtUse) GetName() *Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *StmtUse) GetStmts() *Stmts {
	if x != nil {
		return x.Stmts
	}
	return nil
}

func (x *StmtUse) GetLocation() *StmtLocationInFile {
	if x != nil {
		return x.Location
	}
	return nil
}

// Represents a Class node.
type StmtClass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *Name               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Stmts    *Stmts              `protobuf:"bytes,2,opt,name=stmts,proto3" json:"stmts,omitempty"`
	Location *StmtLocationInFile `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *StmtClass) Reset() {
	*x = StmtClass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definitions_NodeType_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StmtClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StmtClass) ProtoMessage() {}

func (x *StmtClass) ProtoReflect() protoreflect.Message {
	mi := &file_definitions_NodeType_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StmtClass.ProtoReflect.Descriptor instead.
func (*StmtClass) Descriptor() ([]byte, []int) {
	return file_definitions_NodeType_proto_rawDescGZIP(), []int{6}
}

func (x *StmtClass) GetName() *Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *StmtClass) GetStmts() *Stmts {
	if x != nil {
		return x.Stmts
	}
	return nil
}

func (x *StmtClass) GetLocation() *StmtLocationInFile {
	if x != nil {
		return x.Location
	}
	return nil
}

// Represents a Function node.
type StmtFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *Name               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Stmts    *Stmts              `protobuf:"bytes,2,opt,name=stmts,proto3" json:"stmts,omitempty"`
	Location *StmtLocationInFile `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *StmtFunction) Reset() {
	*x = StmtFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definitions_NodeType_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StmtFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StmtFunction) ProtoMessage() {}

func (x *StmtFunction) ProtoReflect() protoreflect.Message {
	mi := &file_definitions_NodeType_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StmtFunction.ProtoReflect.Descriptor instead.
func (*StmtFunction) Descriptor() ([]byte, []int) {
	return file_definitions_NodeType_proto_rawDescGZIP(), []int{7}
}

func (x *StmtFunction) GetName() *Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *StmtFunction) GetStmts() *Stmts {
	if x != nil {
		return x.Stmts
	}
	return nil
}

func (x *StmtFunction) GetLocation() *StmtLocationInFile {
	if x != nil {
		return x.Location
	}
	return nil
}

// Represents a Interface node.
type StmtInterface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *Name               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Stmts    *Stmts              `protobuf:"bytes,2,opt,name=stmts,proto3" json:"stmts,omitempty"`
	Location *StmtLocationInFile `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *StmtInterface) Reset() {
	*x = StmtInterface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definitions_NodeType_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StmtInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StmtInterface) ProtoMessage() {}

func (x *StmtInterface) ProtoReflect() protoreflect.Message {
	mi := &file_definitions_NodeType_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StmtInterface.ProtoReflect.Descriptor instead.
func (*StmtInterface) Descriptor() ([]byte, []int) {
	return file_definitions_NodeType_proto_rawDescGZIP(), []int{8}
}

func (x *StmtInterface) GetName() *Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *StmtInterface) GetStmts() *Stmts {
	if x != nil {
		return x.Stmts
	}
	return nil
}

func (x *StmtInterface) GetLocation() *StmtLocationInFile {
	if x != nil {
		return x.Location
	}
	return nil
}

// Represents a Trait node.
type StmtTrait struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *Name               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Stmts    *Stmts              `protobuf:"bytes,2,opt,name=stmts,proto3" json:"stmts,omitempty"`
	Location *StmtLocationInFile `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *StmtTrait) Reset() {
	*x = StmtTrait{}
	if protoimpl.UnsafeEnabled {
		mi := &file_definitions_NodeType_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StmtTrait) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StmtTrait) ProtoMessage() {}

func (x *StmtTrait) ProtoReflect() protoreflect.Message {
	mi := &file_definitions_NodeType_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StmtTrait.ProtoReflect.Descriptor instead.
func (*StmtTrait) Descriptor() ([]byte, []int) {
	return file_definitions_NodeType_proto_rawDescGZIP(), []int{9}
}

func (x *StmtTrait) GetName() *Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *StmtTrait) GetStmts() *Stmts {
	if x != nil {
		return x.Stmts
	}
	return nil
}

func (x *StmtTrait) GetLocation() *StmtLocationInFile {
	if x != nil {
		return x.Location
	}
	return nil
}

var File_definitions_NodeType_proto protoreflect.FileDescriptor

var file_definitions_NodeType_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x4e, 0x6f,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x4e, 0x6f,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x58, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x22, 0x2d, 0x0a, 0x05, 0x53, 0x74, 0x6d, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x74, 0x6d,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74, 0x52, 0x05, 0x73, 0x74, 0x6d, 0x74, 0x73, 0x22,
	0xa5, 0x03, 0x0a, 0x04, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x09, 0x73, 0x74, 0x6d, 0x74, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x48, 0x00,
	0x52, 0x09, 0x73, 0x74, 0x6d, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x73,
	0x74, 0x6d, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x6d,
	0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x6d,
	0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0d, 0x73, 0x74, 0x6d,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x74, 0x6d,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x73, 0x74,
	0x6d, 0x74, 0x54, 0x72, 0x61, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74, 0x54, 0x72, 0x61,
	0x69, 0x74, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x6d, 0x74, 0x54, 0x72, 0x61, 0x69, 0x74, 0x12,
	0x2d, 0x0a, 0x07, 0x73, 0x74, 0x6d, 0x74, 0x55, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74,
	0x55, 0x73, 0x65, 0x48, 0x00, 0x52, 0x07, 0x73, 0x74, 0x6d, 0x74, 0x55, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x0d, 0x73, 0x74, 0x6d, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x53, 0x74, 0x6d, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x48, 0x00,
	0x52, 0x0d, 0x73, 0x74, 0x6d, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42,
	0x06, 0x0a, 0x04, 0x73, 0x74, 0x6d, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x53, 0x74, 0x6d, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x0d, 0x53,
	0x74, 0x6d, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x05, 0x73, 0x74, 0x6d, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74, 0x73,
	0x52, 0x05, 0x73, 0x74, 0x6d, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x07, 0x53, 0x74, 0x6d, 0x74, 0x55, 0x73, 0x65, 0x12, 0x22, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x74, 0x6d, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74,
	0x73, 0x52, 0x05, 0x73, 0x74, 0x6d, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x90, 0x01, 0x0a, 0x09, 0x53, 0x74, 0x6d, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x22, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x74, 0x6d, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53,
	0x74, 0x6d, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x6d, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x93, 0x01, 0x0a, 0x0c, 0x53, 0x74, 0x6d, 0x74, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x74,
	0x6d, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x6d, 0x74,
	0x73, 0x12, 0x38, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53,
	0x74, 0x6d, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x94, 0x01, 0x0a, 0x0d,
	0x53, 0x74, 0x6d, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x22, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x74, 0x6d, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74,
	0x73, 0x52, 0x05, 0x73, 0x74, 0x6d, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x90, 0x01, 0x0a, 0x09, 0x53, 0x74, 0x6d, 0x74, 0x54, 0x72, 0x61, 0x69, 0x74,
	0x12, 0x22, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x74, 0x6d, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53,
	0x74, 0x6d, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x6d, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x63, 0x6b, 0x34, 0x35, 0x2f, 0x61, 0x73,
	0x74, 0x2d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_definitions_NodeType_proto_rawDescOnce sync.Once
	file_definitions_NodeType_proto_rawDescData = file_definitions_NodeType_proto_rawDesc
)

func file_definitions_NodeType_proto_rawDescGZIP() []byte {
	file_definitions_NodeType_proto_rawDescOnce.Do(func() {
		file_definitions_NodeType_proto_rawDescData = protoimpl.X.CompressGZIP(file_definitions_NodeType_proto_rawDescData)
	})
	return file_definitions_NodeType_proto_rawDescData
}

var file_definitions_NodeType_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_definitions_NodeType_proto_goTypes = []interface{}{
	(*Name)(nil),               // 0: NodeType.Name
	(*Stmts)(nil),              // 1: NodeType.Stmts
	(*Stmt)(nil),               // 2: NodeType.Stmt
	(*StmtLocationInFile)(nil), // 3: NodeType.StmtLocationInFile
	(*StmtNamespace)(nil),      // 4: NodeType.StmtNamespace
	(*StmtUse)(nil),            // 5: NodeType.StmtUse
	(*StmtClass)(nil),          // 6: NodeType.StmtClass
	(*StmtFunction)(nil),       // 7: NodeType.StmtFunction
	(*StmtInterface)(nil),      // 8: NodeType.StmtInterface
	(*StmtTrait)(nil),          // 9: NodeType.StmtTrait
}
var file_definitions_NodeType_proto_depIdxs = []int32{
	2,  // 0: NodeType.Stmts.stmts:type_name -> NodeType.Stmt
	3,  // 1: NodeType.Stmt.attributes:type_name -> NodeType.StmtLocationInFile
	6,  // 2: NodeType.Stmt.stmtClass:type_name -> NodeType.StmtClass
	7,  // 3: NodeType.Stmt.stmtFunction:type_name -> NodeType.StmtFunction
	8,  // 4: NodeType.Stmt.stmtInterface:type_name -> NodeType.StmtInterface
	9,  // 5: NodeType.Stmt.stmtTrait:type_name -> NodeType.StmtTrait
	5,  // 6: NodeType.Stmt.stmtUse:type_name -> NodeType.StmtUse
	4,  // 7: NodeType.Stmt.stmtNamespace:type_name -> NodeType.StmtNamespace
	0,  // 8: NodeType.StmtNamespace.name:type_name -> NodeType.Name
	1,  // 9: NodeType.StmtNamespace.stmts:type_name -> NodeType.Stmts
	3,  // 10: NodeType.StmtNamespace.location:type_name -> NodeType.StmtLocationInFile
	0,  // 11: NodeType.StmtUse.name:type_name -> NodeType.Name
	1,  // 12: NodeType.StmtUse.stmts:type_name -> NodeType.Stmts
	3,  // 13: NodeType.StmtUse.location:type_name -> NodeType.StmtLocationInFile
	0,  // 14: NodeType.StmtClass.name:type_name -> NodeType.Name
	1,  // 15: NodeType.StmtClass.stmts:type_name -> NodeType.Stmts
	3,  // 16: NodeType.StmtClass.location:type_name -> NodeType.StmtLocationInFile
	0,  // 17: NodeType.StmtFunction.name:type_name -> NodeType.Name
	1,  // 18: NodeType.StmtFunction.stmts:type_name -> NodeType.Stmts
	3,  // 19: NodeType.StmtFunction.location:type_name -> NodeType.StmtLocationInFile
	0,  // 20: NodeType.StmtInterface.name:type_name -> NodeType.Name
	1,  // 21: NodeType.StmtInterface.stmts:type_name -> NodeType.Stmts
	3,  // 22: NodeType.StmtInterface.location:type_name -> NodeType.StmtLocationInFile
	0,  // 23: NodeType.StmtTrait.name:type_name -> NodeType.Name
	1,  // 24: NodeType.StmtTrait.stmts:type_name -> NodeType.Stmts
	3,  // 25: NodeType.StmtTrait.location:type_name -> NodeType.StmtLocationInFile
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_definitions_NodeType_proto_init() }
func file_definitions_NodeType_proto_init() {
	if File_definitions_NodeType_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_definitions_NodeType_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Name); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definitions_NodeType_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stmts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definitions_NodeType_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definitions_NodeType_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StmtLocationInFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definitions_NodeType_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StmtNamespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definitions_NodeType_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StmtUse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definitions_NodeType_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StmtClass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definitions_NodeType_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StmtFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definitions_NodeType_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StmtInterface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_definitions_NodeType_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StmtTrait); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_definitions_NodeType_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Stmt_StmtClass)(nil),
		(*Stmt_StmtFunction)(nil),
		(*Stmt_StmtInterface)(nil),
		(*Stmt_StmtTrait)(nil),
		(*Stmt_StmtUse)(nil),
		(*Stmt_StmtNamespace)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_definitions_NodeType_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_definitions_NodeType_proto_goTypes,
		DependencyIndexes: file_definitions_NodeType_proto_depIdxs,
		MessageInfos:      file_definitions_NodeType_proto_msgTypes,
	}.Build()
	File_definitions_NodeType_proto = out.File
	file_definitions_NodeType_proto_rawDesc = nil
	file_definitions_NodeType_proto_goTypes = nil
	file_definitions_NodeType_proto_depIdxs = nil
}
