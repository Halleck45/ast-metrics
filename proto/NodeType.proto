syntax = "proto3";

package NodeType;
option go_package = "github.com/halleck45/ast-metrics/NodeType";

// ------------------------------------
// -- Node Types and statements
// ------------------------------------
// represents an identifier (name)
message Name {
  string short = 1;
  string qualified = 2; // fully qualified name (with namespace)
  string describer = 3; // internal description of statement (e.g. for function: return type + name + parameters)
}

// Represents a list of statements.
message Stmts {
  Analyze analyze = 1;
  // Append here all the possible statements
  repeated StmtClass stmtClass = 2;
  repeated StmtFunction stmtFunction = 3;
  repeated StmtInterface stmtInterface = 4;
  repeated StmtTrait stmtTrait = 5;
  repeated StmtUse stmtUse = 6;
  repeated StmtNamespace stmtNamespace = 7;
  repeated StmtDecisionIf stmtDecisionIf = 8;
  repeated StmtDecisionElseIf stmtDecisionElseIf = 9;
  repeated StmtDecisionElse stmtDecisionElse = 10;
  repeated StmtDecisionCase stmtDecisionCase = 11;
  repeated StmtLoop stmtLoop = 12;
}

// Represents a file
message File {
  string path = 1;
  Stmts stmts = 2;
}

// Describe the location of statement in file.
message StmtLocationInFile {
  int32 startLine = 1;
  int32 startFilePos = 2;
  int32 endLine = 3;
  int32 endFilePos = 4;
  int32 blankLines = 5;
}

// Represents a namespace node.
message StmtNamespace {
  Name name = 1;
  Stmts stmts = 2;
  StmtLocationInFile location = 3;
}

// Represents a Use (or Import) node.
message StmtUse {
  Name name = 1;
  Stmts stmts = 2;
  StmtLocationInFile location = 3;
}

// Represents a Class node.
message StmtClass {
  Name name = 1;
  Stmts stmts = 2;
  StmtLocationInFile location = 3;
  repeated StmtComment comments = 4;
}

// Represents a Function node.
message StmtFunction {
  Name name = 1;
  Stmts stmts = 2;
  StmtLocationInFile location = 3;
  repeated StmtComment comments = 4;
}

// Represents a Interface node.
message StmtInterface {
  Name name = 1;
  Stmts stmts = 2;
  StmtLocationInFile location = 3;
}

// Represents a Trait node.
message StmtTrait {
  Name name = 1;
  Stmts stmts = 2;
  StmtLocationInFile location = 3;
}


// Represents a decision (IF)
message StmtDecisionIf {
    Stmts stmts = 1;
    StmtLocationInFile location = 2;
}

// Represents a decision (ELSEIF)
message StmtDecisionElseIf {
    Stmts stmts = 1;
    StmtLocationInFile location = 2;
}


// Represents a decision (ELSE)
message StmtDecisionElse {
    Stmts stmts = 1;
    StmtLocationInFile location = 2;
}

// Represents a decision (CASE)
message StmtDecisionCase {
    Stmts stmts = 1;
    StmtLocationInFile location = 2;
}

// Represents a loop (FOR, FOREACH, WHILE)
message StmtLoop {
    Stmts stmts = 1;
    StmtLocationInFile location = 2;
}

// Represents a comment (multiline or singline)
message StmtComment {
  string text = 1;
  StmtLocationInFile location = 2;
}

// ------------------------------------
// -- Metrics
// ------------------------------------
// Represents The storage of all the metrics
message Analyze {
  Complexity complexity = 1;
  Volume volume = 2;
}
message Complexity {
  optional int32 cyclomatic = 1;
}
message Volume {
  optional int32 loc = 1;
  optional int32 lloc = 2;
  optional int32 cloc = 3;
}